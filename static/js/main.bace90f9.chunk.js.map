{"version":3,"sources":["components/Controls/Controls.module.css","components/Balance/Balance.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Dashboard/Dashboard.module.css","components/Controls/Controls.jsx","components/Balance/Balance.jsx","components/TransactionHistory/TransactionHistory.jsx","services/storage.js","components/Dashboard/Dashboard.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Controls","state","amount","handleInputAmount","e","setState","Number","currentTarget","value","setDeposit","props","deposit","setWithdraw","withdraw","amountId","this","className","styles","controls","type","name","id","onChange","onClick","Component","Balance","balance","TransactionHistory","arrayOfTransactions","history","map","item","date","key","localStorage","setItem","JSON","stringify","err","console","log","transaction","getItem","parse","Dashboard","transactions","generateIds","amountInput","shortid","generate","handleDeposit","income","Date","toLocaleString","toast","error","handleWithdraw","storage","prevProps","prevState","transactionAmounts","reduce","acc","t","expenses","dashboard","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bace90f9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__BY2-d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__30Dlf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__3SkB0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__BewSV\"};","import React, { Component } from 'react';\r\nimport styles from './Controls.module.css';\r\n\r\nclass Controls extends Component {\r\n  state = {\r\n    amount: 0,\r\n  };\r\n\r\n  handleInputAmount = e => {\r\n    this.setState({\r\n      amount: Number(e.currentTarget.value),\r\n    });\r\n  };\r\n\r\n  setDeposit = () => {\r\n    this.props.deposit(this.state.amount);\r\n  };\r\n\r\n  setWithdraw = () => {\r\n    this.props.withdraw(this.state.amount);\r\n  };\r\n\r\n  render() {\r\n    const { amountId } = this.props;\r\n    return (\r\n      <section className={styles.controls}>\r\n        <input\r\n          type=\"number\"\r\n          name=\"amount\"\r\n          id={amountId}\r\n          onChange={this.handleInputAmount}\r\n        />\r\n        <button type=\"button\" onClick={this.setDeposit}>\r\n          Deposit\r\n        </button>\r\n        <button type=\"button\" onClick={this.setWithdraw}>\r\n          Withdraw\r\n        </button>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Controls;\r\n","import React from 'react';\r\nimport styles from './Balance.module.css';\r\n\r\nconst Balance = ({ withdraw, deposit, balance }) => (\r\n  <section className={styles.balance}>\r\n    <span>⬆️{withdraw}$</span>\r\n    <span>⬇️{deposit}$</span>\r\n    <span>Balance: {balance}$</span>\r\n  </section>\r\n);\r\n\r\nexport default Balance;\r\n","import React from 'react';\r\nimport styles from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ arrayOfTransactions }) => (\r\n  <table className={styles.history}>\r\n    <thead>\r\n      <tr>\r\n        <th>Transaction</th>\r\n        <th>Amount</th>\r\n        <th>Date</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {arrayOfTransactions.map(item => {\r\n        const { id, type, amount, date } = item;\r\n        return (\r\n          <tr key={id}>\r\n            <td>{type}</td>\r\n            <td>{amount}$</td>\r\n            <td>{date}</td>\r\n          </tr>\r\n        );\r\n      })}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nexport default TransactionHistory;\r\n","const save = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst get = key => {\n  try {\n    const transaction = localStorage.getItem(key);\n\n    return transaction ? JSON.parse(transaction) : null;\n  } catch (e) {\n    console.log('err');\n  }\n\n  return null;\n};\nexport default {\n  save,\n  get,\n};\n","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport Controls from '../Controls/Controls';\r\nimport Balance from '../Balance/Balance';\r\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport styles from './Dashboard.module.css';\r\nimport storage from '../../services/storage';\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    transactions: [],\r\n    balance: 0,\r\n  };\r\n\r\n  generateIds = {\r\n    amountInput: shortid.generate(),\r\n  };\r\n\r\n  componentDidMount() {\r\n    const transactions = storage.get('transactions');\r\n    const balance = storage.get('balance');\r\n    if (transactions) {\r\n      this.setState({ balance, transactions });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { transactions, balance } = this.state;\r\n\r\n    if (prevState.transactions !== transactions) {\r\n      storage.save('transactions', transactions);\r\n      storage.save('balance', balance);\r\n    }\r\n  }\r\n\r\n  handleDeposit = amount => {\r\n    if (!amount) {\r\n      toast.error('Введите сумму для проведения операции!');\r\n      return;\r\n    }\r\n    const income = {\r\n      id: shortid.generate(),\r\n      type: 'income',\r\n      amount,\r\n      date: new Date().toLocaleString(),\r\n    };\r\n    this.setState(state => ({\r\n      balance: state.balance + amount,\r\n      transactions: [...state.transactions, income],\r\n    }));\r\n  };\r\n\r\n  handleWithdraw = amount => {\r\n    if (amount > this.state.balance) {\r\n      toast.error('На счету недостаточно средств для проведения операции!');\r\n    } else if (amount <= 0) {\r\n      toast.error('Введите сумму для проведения операции!');\r\n    } else {\r\n      const withdraw = {\r\n        id: shortid.generate(),\r\n        type: 'expenses',\r\n        amount,\r\n        date: new Date().toLocaleString(),\r\n      };\r\n      this.setState(state => ({\r\n        balance: state.balance - amount,\r\n        transactions: [...state.transactions, withdraw],\r\n      }));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { transactions, balance } = this.state;\r\n    const { amountInput } = this.generateIds;\r\n    const transactionAmounts = transactions.reduce(\r\n      (acc, t) => {\r\n        return {\r\n          ...acc,\r\n          [t.type]: t.amount + acc[t.type],\r\n        };\r\n      },\r\n      { income: 0, expenses: 0 },\r\n    );\r\n    return (\r\n      <div className={styles.dashboard}>\r\n        <Controls\r\n          amountId={amountInput}\r\n          deposit={this.handleDeposit}\r\n          withdraw={this.handleWithdraw}\r\n        />\r\n\r\n        <Balance\r\n          withdraw={transactionAmounts.expenses}\r\n          deposit={transactionAmounts.income}\r\n          balance={balance}\r\n        />\r\n\r\n        <TransactionHistory arrayOfTransactions={transactions} />\r\n        <ToastContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport Dashboard from '../Dashboard/Dashboard';\r\n\r\nconst App = () => (\r\n  <div>\r\n    <Dashboard />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './style.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}